(set-logic QF_BV)
(declare-fun shift0 () (_ BitVec 77))
(declare-fun shift1 () (_ BitVec 77))
(declare-fun shift2 () (_ BitVec 77))
(declare-fun shift3 () (_ BitVec 77))
(assert (= (bvnot (_ bv0 77)) (bvor shift0 (bvor shift1 (bvor shift2 shift3)))))
(define-fun bitsumhelper ((x (_ BitVec 11))) (_ BitVec 11) (bvand x (bvsub x (_ bv1 11))))
(assert (not (= (_ bv0 11) (bitsumhelper (bitsumhelper (concat (_ bv0 1) (concat ((_ extract 7 7) shift3) (concat ((_ extract 14 14) shift3) (concat ((_ extract 21 21) shift3) (concat ((_ extract 28 28) shift3) (concat ((_ extract 35 35) shift3) (concat ((_ extract 42 42) shift3) (concat ((_ extract 49 49) shift3) (concat (_ bv0 1) (concat ((_ extract 63 63) shift3) ((_ extract 70 70) shift3))))))))))))))))
(assert (= (_ bv0 11) (bitsumhelper (bitsumhelper (bitsumhelper (concat ((_ extract 4 4) shift3) (concat (_ bv0 1) (concat ((_ extract 18 18) shift3) (concat ((_ extract 25 25) shift3) (concat (_ bv0 1) (concat (_ bv0 1) (concat (_ bv0 1) (concat (_ bv0 1) (concat ((_ extract 60 60) shift3) (concat ((_ extract 67 67) shift3) (_ bv0 1))))))))))))))))
(assert (not (= (_ bv0 11) (bitsumhelper (bitsumhelper (concat ((_ extract 5 5) shift3) (concat (_ bv0 1) (concat ((_ extract 19 19) shift3) (concat ((_ extract 26 26) shift3) (concat (_ bv0 1) (concat ((_ extract 40 40) shift3) (concat (_ bv0 1) (concat ((_ extract 54 54) shift3) (concat ((_ extract 61 61) shift3) (_ bv0 2)))))))))))))))
(assert (not (= (_ bv0 11) (bitsumhelper (bitsumhelper (concat ((_ extract 6 6) shift3) (concat ((_ extract 13 13) shift3) (concat (_ bv0 1) (concat ((_ extract 27 27) shift3) (concat ((_ extract 34 34) shift3) (concat ((_ extract 41 41) shift3) (concat (_ bv0 1) (concat ((_ extract 55 55) shift3) (_ bv0 3))))))))))))))
(assert (= (_ bv0 77) (bvxor (_ bv0 77) (bvnot (bvneg (bvxor shift0 (_ bv0 77)))))))
(assert (= (bvand (concat shift3 shift3) (bvand (concat shift3 shift3) (bvand (concat shift3 shift3) (bvand (concat shift3 shift3) (bvlshr (concat shift3 shift3) (_ bv4 154)))))) (_ bv0 154)))
(assert (= (_ bv0 77) (bvand ((_ rotate_right 1) shift3) shift1)))
(assert (= (_ bv0 77) (bvand ((_ rotate_right 1) shift3) shift2)))
(check-sat)
(exit)
