(set-logic QF_BV)
(declare-fun _substvar_555_ () (_ BitVec 1))
(declare-fun _substvar_570_ () (_ BitVec 1))
(declare-fun _substvar_2797_ () (_ BitVec 1))
(declare-fun _substvar_577_ () (_ BitVec 32))
(declare-fun _substvar_580_ () (_ BitVec 32))
(declare-fun _substvar_615_ () (_ BitVec 1))
(declare-fun _substvar_585_ () (_ BitVec 32))
(declare-fun _substvar_571_ () (_ BitVec 32))
(declare-fun _substvar_582_ () (_ BitVec 32))
(assert (let ((?x3 (_ bv10 32))) (let ((?x5 (_ bv1000 32))) (let (($x70 (distinct _substvar_580_ _substvar_582_))) (let (($x71 $x70)) (let (($x73 $x71)) (let ((?x76 (ite $x73 _substvar_615_ (_ bv0 1)))) (let ((?x77 ((_ zero_extend 31) ?x76))) (let (($x78 (distinct ?x77 (_ bv0 32)))) (let (($x79 (distinct _substvar_582_ _substvar_585_))) (let (($x80 (and $x78 $x79))) (let ((?x83 (ite $x80 _substvar_555_ (_ bv0 1)))) (let ((?x84 ((_ zero_extend 31) ?x83))) (let (($x85 (distinct ?x84 (_ bv0 32)))) (let ((?x88 (ite $x85 _substvar_570_ (_ bv0 1)))) (let ((?x89 ((_ zero_extend 31) ?x88))) (let (($x91 (bvult _substvar_571_ ?x3))) (let (($x92 $x91)) (let (($x94 $x92)) (let (($x95 (bvult _substvar_577_ ?x3))) (let (($x96 (and $x94 $x95))) (let (($x97 (bvult _substvar_580_ ?x3))) (let (($x98 (and $x96 $x97))) (let (($x99 (bvult _substvar_582_ ?x3))) (let (($x100 (and $x98 $x99))) (let (($x101 (bvult _substvar_585_ ?x3))) (let (($x102 (and $x100 $x101))) (let (($x103 true)) (let ((?x104 _substvar_2797_)) (let ((?x105 (ite $x102 ?x104 (_ bv0 1)))) (let ((?x106 ((_ zero_extend 31) ?x105))) (let ((?x117 (bvadd (_ bv0 32) _substvar_577_))) (let ((?x118 (bvmul _substvar_580_ ?x5))) (let ((?x119 (bvadd ?x117 ?x118))) (let ((?x121 (bvadd ?x119 (_ bv0 32)))) (let ((?x122 (bvmul _substvar_585_ ?x3))) (let ((?x123 (bvadd ?x121 ?x122))) (let ((?x124 (bvadd ?x123 _substvar_571_))) (let ((?x126 (bvmul _substvar_582_ ?x5))) (let ((?x127 (bvadd (_ bv0 32) ?x126))) (let ((?x129 (bvadd ?x127 (_ bv0 32)))) (let ((?x130 (bvmul _substvar_571_ ?x3))) (let ((?x131 (bvadd ?x129 ?x130))) (let ((?x132 (bvadd ?x131 (_ bv0 32)))) (let (($x133 (= ?x124 ?x132))) (let ((?x134 (ite $x133 (_ bv1 1) (_ bv0 1)))) (let ((?x135 ((_ zero_extend 31) ?x134))) (let (($x136 (distinct ?x89 (_ bv0 32)))) (let (($x137 (distinct ?x106 (_ bv0 32)))) (let (($x138 (and $x136 $x137))) (let (($x140 $x138)) (let (($x141 (distinct ?x135 (_ bv0 32)))) (let ((?x142 (ite $x141 (_ bv1 1) (_ bv0 1)))) (let ((?x143 (ite $x140 ?x142 (_ bv0 1)))) (let (($x144 (= ?x143 (_ bv1 1)))) (let (($x145 (not $x144))) (let (($x146 (not $x145))) $x146)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
