(set-logic QF_BV)
(declare-fun x0 () (_ BitVec 16))
(declare-fun x1 () (_ BitVec 16))
(declare-fun x2 () (_ BitVec 32))
(declare-fun x3 () Bool)
(declare-fun x4 () Bool)
(declare-fun x5 () (_ BitVec 16))
(declare-fun x6 () (_ BitVec 16))
(declare-fun x7 () Bool)
(declare-fun x8 () Bool)
(declare-fun x9 () Bool)
(declare-fun x10 () Bool)
(declare-fun x11 () (_ BitVec 16))
(declare-fun x12 () Bool)
(declare-fun x13 () (_ BitVec 16))
(declare-fun x14 () (_ BitVec 16))
(declare-fun x15 () (_ BitVec 16))
(assert (let ((?v_0 (bvadd x2 (_ bv4 32)))) (let ((?v_14 (bvadd ?v_0 (_ bv0 32)))) (let ((?v_1 (bvadd ?v_14 (_ bv4 32)))) (let ((?v_20 (bvadd ?v_1 (bvsub (bvadd (bvadd (bvadd ?v_1 (_ bv53 32)) (_ bv0 32)) ((_ zero_extend 16) x11)) ?v_1)))) (let ((?v_2 (bvadd ?v_20 (_ bv4 32)))) (let ((?v_26 (bvadd ?v_2 (bvsub (bvadd (bvadd (bvadd ?v_2 (_ bv70 32)) (_ bv0 32)) ((_ zero_extend 16) x15)) ?v_2)))) (let ((?v_3 (bvadd ?v_26 (_ bv4 32)))) (let ((?v_32 (bvadd ?v_3 (_ bv0 32)))) (let ((?v_4 (bvadd ?v_32 (_ bv4 32)))) (let ((?v_38 (bvadd ?v_4 (bvsub (bvadd (bvadd (bvadd ?v_4 (_ bv63 32)) (_ bv0 32)) ((_ zero_extend 16) x5)) ?v_4)))) (let ((?v_5 (bvadd ?v_38 (_ bv4 32)))) (let ((?v_43 (bvadd ?v_5 (_ bv0 32)))) (let ((?v_6 (bvadd ?v_43 (_ bv4 32)))) (let ((?v_50 (bvadd ?v_6 (_ bv0 32)))) (let ((?v_7 (bvadd ?v_50 (_ bv4 32)))) (let ((?v_52 (bvadd ?v_7 (_ bv0 32)))) (let ((?v_8 (bvadd ?v_52 (_ bv4 32)))) (let ((?v_54 (bvadd ?v_8 (_ bv0 32)))) (let ((?v_9 (bvadd ?v_54 (_ bv4 32)))) (let ((?v_55 (bvadd ?v_9 (bvsub (bvadd (bvadd (bvadd ?v_9 (_ bv59 32)) (_ bv0 32)) ((_ zero_extend 16) x14)) ?v_9)))) (and true (= x11 x6) true (= x15 x1) true (= x5 x13) true (= x14 x0) (= x2 (_ bv0 32)) (bvslt (bvadd ?v_55 (_ bv4 32)) (_ bv0 32)) true x12 true x7 true x10 true x4 true x3 true x9 true x8 true))))))))))))))))))))))
(check-sat)
(exit)
