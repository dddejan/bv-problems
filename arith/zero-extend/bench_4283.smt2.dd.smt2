(set-logic QF_BV)
(declare-fun x0 () (_ BitVec 16))
(declare-fun x1 () (_ BitVec 16))
(declare-fun x2 () Bool)
(declare-fun x3 () (_ BitVec 16))
(declare-fun x4 () Bool)
(declare-fun x5 () (_ BitVec 16))
(declare-fun x6 () Bool)
(declare-fun x7 () (_ BitVec 16))
(declare-fun x8 () (_ BitVec 16))
(declare-fun x9 () Bool)
(declare-fun x10 () (_ BitVec 32))
(declare-fun x11 () (_ BitVec 16))
(declare-fun x12 () Bool)
(declare-fun x13 () (_ BitVec 16))
(assert (let ((?v_16 (bvadd (_ bv0 32) (bvsub (bvadd (_ bv0 32) ((_ zero_extend 16) x7)) (_ bv0 32))))) (let ((?v_2 (bvadd ?v_16 (_ bv4 32)))) (let ((?v_22 (bvadd ?v_2 (bvsub (bvadd (bvadd (bvadd ?v_2 (_ bv70 32)) (_ bv0 32)) ((_ zero_extend 16) x5)) ?v_2)))) (let ((?v_3 (bvadd ?v_22 (_ bv4 32)))) (let ((?v_28 (bvadd ?v_3 (bvsub (bvadd (bvadd (bvadd ?v_3 (_ bv59 32)) x10) ((_ zero_extend 16) x3)) ?v_3)))) (let ((?v_4 (bvadd ?v_28 (_ bv4 32)))) (let ((?v_34 (bvadd ?v_4 (_ bv0 32)))) (let ((?v_5 (bvadd ?v_34 (_ bv4 32)))) (let ((?v_39 (bvadd ?v_5 (bvsub (bvadd (bvadd (bvadd ?v_5 (_ bv64 32)) (_ bv0 32)) ((_ zero_extend 16) x8)) ?v_5)))) (let ((?v_42 (bvadd ?v_39 (_ bv4 32)))) (and true (= x7 x13) true (= x5 x0) true (= x3 x11) true (= x8 x1) true (bvslt (bvadd ?v_42 (_ bv42 32)) (_ bv0 32)) true (= x10 (_ bv0 32)) x4 true x2 true x9 true x12 true x6 true))))))))))))
(check-sat)
(exit)
