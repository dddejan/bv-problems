(set-logic QF_BV)
(declare-fun x0 () (_ BitVec 16))
(declare-fun x1 () (_ BitVec 16))
(declare-fun x2 () (_ BitVec 16))
(declare-fun x3 () (_ BitVec 16))
(declare-fun x4 () (_ BitVec 16))
(declare-fun x5 () Bool)
(declare-fun x6 () (_ BitVec 16))
(declare-fun x7 () Bool)
(declare-fun x8 () Bool)
(declare-fun x9 () (_ BitVec 16))
(declare-fun x10 () Bool)
(declare-fun x11 () Bool)
(declare-fun x12 () (_ BitVec 32))
(declare-fun x13 () (_ BitVec 16))
(declare-fun x14 () Bool)
(declare-fun x15 () Bool)
(declare-fun x16 () Bool)
(assert (let ((?v_0 (bvadd x12 (_ bv4 32)))) (let ((?v_16 (bvadd ?v_0 (bvsub (bvadd (bvadd (bvadd ?v_0 (_ bv61 32)) (_ bv0 32)) ((_ zero_extend 16) x1)) ?v_0)))) (let ((?v_1 (bvadd ?v_16 (_ bv4 32)))) (let ((?v_22 (bvadd ?v_1 (bvsub (bvadd (bvadd (bvadd ?v_1 (_ bv53 32)) (_ bv0 32)) ((_ zero_extend 16) x4)) ?v_1)))) (let ((?v_2 (bvadd ?v_22 (_ bv4 32)))) (let ((?v_28 (bvadd ?v_2 (bvsub (bvadd (bvadd (bvadd ?v_2 (_ bv70 32)) (_ bv0 32)) ((_ zero_extend 16) x9)) ?v_2)))) (let ((?v_3 (bvadd ?v_28 (_ bv4 32)))) (let ((?v_34 (bvadd ?v_3 (bvsub (bvadd (bvadd (bvadd ?v_3 (_ bv59 32)) (_ bv0 32)) ((_ zero_extend 16) x0)) ?v_3)))) (let ((?v_4 (bvadd ?v_34 (_ bv4 32)))) (let ((?v_40 (bvadd ?v_4 (_ bv0 32)))) (let ((?v_5 (bvadd ?v_40 (_ bv4 32)))) (let ((?v_45 (bvadd ?v_5 (_ bv0 32)))) (let ((?v_6 (bvadd ?v_45 (_ bv4 32)))) (let ((?v_52 (bvadd ?v_6 (_ bv0 32)))) (let ((?v_7 (bvadd ?v_52 (_ bv4 32)))) (let ((?v_54 (bvadd ?v_7 (_ bv0 32)))) (let ((?v_8 (bvadd ?v_54 (_ bv4 32)))) (let ((?v_56 (bvadd ?v_8 (_ bv0 32)))) (let ((?v_9 (bvadd ?v_56 (_ bv4 32)))) (let ((?v_58 (bvadd ?v_9 (_ bv0 32)))) (let ((?v_10 (bvadd ?v_58 (_ bv4 32)))) (let ((?v_60 (bvadd ?v_10 (_ bv0 32)))) (let ((?v_11 (bvadd ?v_60 (_ bv4 32)))) (let ((?v_61 (bvadd ?v_11 (_ bv0 32)))) (and true (= x1 x3) true (= x4 x6) true (= x9 x2) true (= x0 x13) true (= x12 (_ bv0 32)) (bvslt (bvadd ?v_61 (_ bv0 32)) (_ bv0 32)) x10 true x8 true x11 true x7 true x15 true x5 true x16 true x14 true))))))))))))))))))))))))))
(check-sat)
(exit)
