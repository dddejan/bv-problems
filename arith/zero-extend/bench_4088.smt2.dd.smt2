(set-logic QF_BV)
(declare-fun x0 () Bool)
(declare-fun x1 () (_ BitVec 32))
(declare-fun x2 () Bool)
(declare-fun x3 () (_ BitVec 16))
(declare-fun x4 () (_ BitVec 16))
(declare-fun x5 () (_ BitVec 16))
(declare-fun x6 () (_ BitVec 16))
(declare-fun x7 () Bool)
(declare-fun x8 () (_ BitVec 8))
(declare-fun x9 () Bool)
(declare-fun x10 () (_ BitVec 16))
(declare-fun x11 () Bool)
(declare-fun x12 () (_ BitVec 16))
(declare-fun x13 () Bool)
(declare-fun x14 () (_ BitVec 16))
(declare-fun x15 () (_ BitVec 16))
(declare-fun x16 () Bool)
(assert (let ((?v_0 (bvadd x1 (_ bv4 32)))) (let ((?v_12 (bvadd ?v_0 (bvsub (bvadd (bvadd (bvadd ?v_0 (_ bv61 32)) (_ bv0 32)) ((_ zero_extend 16) x6)) ?v_0)))) (let ((?v_1 (bvadd ?v_12 (_ bv4 32)))) (let ((?v_18 (bvadd ?v_1 (bvsub (bvadd (bvadd (bvadd ?v_1 (_ bv53 32)) (_ bv0 32)) ((_ zero_extend 16) x15)) ?v_1)))) (let ((?v_2 (bvadd ?v_18 (_ bv4 32)))) (let ((?v_24 (bvadd ?v_2 (bvsub (bvadd (bvadd (bvadd ?v_2 (_ bv70 32)) (_ bv0 32)) ((_ zero_extend 16) x10)) ?v_2)))) (let ((?v_3 (bvadd ?v_24 (_ bv4 32)))) (let ((?v_30 (bvadd ?v_3 (bvsub (bvadd (bvadd (bvadd ?v_3 (_ bv59 32)) (_ bv0 32)) ((_ zero_extend 16) x12)) ?v_3)))) (let ((?v_4 (bvadd ?v_30 (_ bv4 32)))) (let ((?v_36 (bvadd ?v_4 (_ bv0 32)))) (let ((?v_5 (bvadd ?v_36 (_ bv4 32)))) (let ((?v_41 (bvadd ?v_5 (_ bv0 32)))) (let ((?v_6 (bvadd ?v_41 (_ bv4 32)))) (let ((?v_48 (bvadd ?v_6 (_ bv0 32)))) (let ((?v_7 (bvadd ?v_48 (_ bv4 32)))) (and true (= x6 x3) true (= x15 x4) true (= x10 x14) true (= x12 x5) true x13 (= x1 (_ bv0 32)) (bvslt (bvadd ?v_7 (_ bv0 32)) (_ bv0 32)) true x11 true x2 true x0 true x7 true x16 true x9 true)))))))))))))))))
(check-sat)
(exit)
