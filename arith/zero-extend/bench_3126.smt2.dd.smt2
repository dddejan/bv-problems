(set-logic QF_BV)
(declare-fun x0 () Bool)
(declare-fun x1 () Bool)
(declare-fun x2 () Bool)
(declare-fun x3 () (_ BitVec 32))
(declare-fun x4 () Bool)
(declare-fun x5 () (_ BitVec 16))
(declare-fun x6 () Bool)
(declare-fun x7 () Bool)
(declare-fun x8 () Bool)
(declare-fun x9 () Bool)
(declare-fun x10 () Bool)
(declare-fun x11 () Bool)
(declare-fun x12 () Bool)
(declare-fun x13 () Bool)
(declare-fun x14 () Bool)
(declare-fun x15 () Bool)
(declare-fun x16 () (_ BitVec 8))
(declare-fun x17 () Bool)
(declare-fun x18 () (_ BitVec 32))
(declare-fun x19 () Bool)
(declare-fun x20 () Bool)
(declare-fun x21 () (_ BitVec 32))
(declare-fun x22 () Bool)
(declare-fun x23 () (_ BitVec 16))
(declare-fun x24 () Bool)
(declare-fun x25 () Bool)
(declare-fun x26 () Bool)
(declare-fun x27 () Bool)
(declare-fun x28 () Bool)
(declare-fun x29 () Bool)
(declare-fun x30 () Bool)
(declare-fun x31 () Bool)
(declare-fun x32 () Bool)
(declare-fun x33 () (_ BitVec 32))
(declare-fun x34 () Bool)
(declare-fun x35 () Bool)
(declare-fun x36 () Bool)
(declare-fun x37 () Bool)
(declare-fun x38 () (_ BitVec 32))
(declare-fun x39 () Bool)
(declare-fun x40 () Bool)
(declare-fun x41 () Bool)
(assert (let ((?v_0 (bvadd x38 (_ bv4268232 32))) (?v_253 ((_ zero_extend 24) x16))) (and true (= x3 x18) (= x23 x5) true (bvult (bvsub (bvadd ?v_0 ?v_253) (_ bv1 32)) ?v_0) true x15 x12 (bvult (_ bv58817398 32) x21) true x32 x4 true x36 (bvule (_ bv58816660 32) x21) true x10 true x1 x13 x41 true x9 true x37 true x39 x6 true x26 x29 x2 true x7 true x11 x14 x19 true x27 x40 true x35 true x24 true x30 true x28 true x0 true x8 x34 x20 true x22 x17 true x31 true x25 true (not (= ?v_253 (_ bv0 32))) (bvule x38 x33) true)))
(check-sat)
(exit)
