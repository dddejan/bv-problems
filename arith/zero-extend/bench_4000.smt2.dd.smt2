(set-logic QF_BV)
(declare-fun x0 () Bool)
(declare-fun x1 () (_ BitVec 16))
(declare-fun x2 () Bool)
(declare-fun x3 () (_ BitVec 16))
(declare-fun x4 () (_ BitVec 16))
(declare-fun x5 () (_ BitVec 16))
(declare-fun x6 () Bool)
(declare-fun x7 () Bool)
(declare-fun x8 () (_ BitVec 16))
(declare-fun x9 () Bool)
(declare-fun x10 () (_ BitVec 32))
(declare-fun x11 () (_ BitVec 16))
(declare-fun x12 () Bool)
(declare-fun x13 () Bool)
(declare-fun x14 () Bool)
(declare-fun x15 () (_ BitVec 16))
(declare-fun x16 () (_ BitVec 16))
(assert (let ((?v_0 (bvadd x10 (_ bv4 32)))) (let ((?v_12 (bvadd ?v_0 (bvsub (bvadd (bvadd (bvadd ?v_0 (_ bv61 32)) (_ bv0 32)) ((_ zero_extend 16) x3)) ?v_0)))) (let ((?v_1 (bvadd ?v_12 (_ bv4 32)))) (let ((?v_18 (bvadd ?v_1 (bvsub (bvadd (bvadd (bvadd ?v_1 (_ bv53 32)) (_ bv0 32)) ((_ zero_extend 16) x5)) ?v_1)))) (let ((?v_2 (bvadd ?v_18 (_ bv4 32)))) (let ((?v_24 (bvadd ?v_2 (_ bv0 32)))) (let ((?v_3 (bvadd ?v_24 (_ bv4 32)))) (let ((?v_30 (bvadd ?v_3 (bvsub (bvadd (bvadd (bvadd ?v_3 (_ bv59 32)) (_ bv0 32)) ((_ zero_extend 16) x4)) ?v_3)))) (let ((?v_4 (bvadd ?v_30 (_ bv4 32)))) (let ((?v_36 (bvadd ?v_4 (_ bv0 32)))) (let ((?v_5 (bvadd ?v_36 (_ bv4 32)))) (let ((?v_41 (bvadd ?v_5 (_ bv0 32)))) (let ((?v_6 (bvadd ?v_41 (_ bv4 32)))) (let ((?v_48 (bvadd ?v_6 (_ bv0 32)))) (let ((?v_7 (bvadd ?v_48 (_ bv4 32)))) (let ((?v_50 (bvadd ?v_7 (bvsub (bvadd (bvadd (bvadd ?v_7 (_ bv60 32)) (_ bv0 32)) ((_ zero_extend 16) x16)) ?v_7)))) (let ((?v_49 (bvadd ?v_50 (_ bv4 32)))) (and true (= x3 x15) true (= x5 x8) true (= x4 x1) true (= x16 x11) (= x10 (_ bv0 32)) (bvslt (bvadd ?v_49 (_ bv62 32)) (_ bv0 32)) x14 true x9 true x13 true x0 true x7 true x12 true x6 true x2 true)))))))))))))))))))
(check-sat)
(exit)
