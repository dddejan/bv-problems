(set-logic QF_BV)
(declare-fun x0 () (_ BitVec 16))
(declare-fun x1 () Bool)
(declare-fun x2 () Bool)
(declare-fun x3 () (_ BitVec 32))
(declare-fun x4 () (_ BitVec 16))
(declare-fun x5 () Bool)
(declare-fun x6 () (_ BitVec 16))
(declare-fun x7 () (_ BitVec 16))
(declare-fun x8 () (_ BitVec 16))
(declare-fun x9 () (_ BitVec 16))
(declare-fun x10 () (_ BitVec 16))
(declare-fun x11 () Bool)
(declare-fun x12 () Bool)
(declare-fun x13 () (_ BitVec 16))
(assert (let ((?v_11 (bvadd (_ bv0 32) (bvsub (bvadd (_ bv0 32) ((_ zero_extend 16) x6)) (_ bv0 32))))) (let ((?v_1 (bvadd ?v_11 (_ bv4 32)))) (let ((?v_17 (bvadd ?v_1 (bvsub (bvadd (bvadd (bvadd ?v_1 (_ bv53 32)) (_ bv0 32)) ((_ zero_extend 16) x13)) ?v_1)))) (let ((?v_2 (bvadd ?v_17 (_ bv4 32)))) (let ((?v_23 (bvadd ?v_2 (_ bv0 32)))) (let ((?v_3 (bvadd ?v_23 (_ bv4 32)))) (let ((?v_29 (bvadd ?v_3 (bvsub (bvadd (bvadd (bvadd ?v_3 (_ bv59 32)) (_ bv0 32)) ((_ zero_extend 16) x9)) ?v_3)))) (let ((?v_4 (bvadd ?v_29 (_ bv4 32)))) (let ((?v_35 (bvadd ?v_4 (bvsub (bvadd (bvadd (bvadd ?v_4 (_ bv63 32)) x3) (_ bv0 32)) ?v_4)))) (let ((?v_5 (bvadd ?v_35 (_ bv4 32)))) (let ((?v_40 (bvadd ?v_5 (bvsub (bvadd (bvadd (bvadd ?v_5 (_ bv64 32)) (_ bv0 32)) ((_ zero_extend 16) x7)) ?v_5)))) (let ((?v_6 (bvadd ?v_40 (_ bv4 32)))) (let ((?v_46 (bvadd ?v_6 (_ bv0 32)))) (and true (= x6 x10) true (= x13 x8) true (= x9 x0) true (= x7 x4) true (bvslt (bvadd ?v_46 (_ bv4 32)) (_ bv0 32)) x2 true x1 true x11 true x12 true x5 true (= x3 (_ bv0 32)) true)))))))))))))))
(check-sat)
(exit)
