(set-logic QF_BV)
(declare-fun x0 () (_ BitVec 159))
(declare-fun x1 () Bool)
(declare-fun x2 () Bool)
(declare-fun x3 () Bool)
(declare-fun x4 () (_ BitVec 159))
(declare-fun x5 () Bool)
(declare-fun x6 () Bool)
(declare-fun x7 () Bool)
(declare-fun x8 () (_ BitVec 159))
(declare-fun x9 () (_ BitVec 159))
(declare-fun x10 () (_ BitVec 159))
(declare-fun x11 () Bool)
(declare-fun x12 () (_ BitVec 159))
(declare-fun x13 () Bool)
(declare-fun x14 () Bool)
(declare-fun x15 () (_ BitVec 159))
(declare-fun x16 () Bool)
(declare-fun x17 () Bool)
(declare-fun x18 () (_ BitVec 159))
(declare-fun x19 () (_ BitVec 159))
(declare-fun x20 () Bool)
(declare-fun x21 () Bool)
(declare-fun x22 () Bool)
(declare-fun x23 () Bool)
(declare-fun x24 () Bool)
(declare-fun x25 () (_ BitVec 159))
(declare-fun x26 () Bool)
(declare-fun x27 () Bool)
(declare-fun x28 () (_ BitVec 159))
(declare-fun x29 () Bool)
(declare-fun x30 () Bool)
(declare-fun x31 () Bool)
(declare-fun x32 () (_ BitVec 159))
(declare-fun x33 () Bool)
(declare-fun x34 () (_ BitVec 159))
(declare-fun x35 () Bool)
(declare-fun x36 () (_ BitVec 159))
(declare-fun x37 () Bool)
(declare-fun x38 () Bool)
(declare-fun x39 () Bool)
(declare-fun x40 () Bool)
(declare-fun x41 () (_ BitVec 159))
(declare-fun x42 () (_ BitVec 159))
(declare-fun x43 () Bool)
(declare-fun x44 () Bool)
(declare-fun x45 () (_ BitVec 1))
(declare-fun x46 () Bool)
(declare-fun x47 () Bool)
(declare-fun x48 () Bool)
(declare-fun x49 () (_ BitVec 1))
(declare-fun x50 () Bool)
(declare-fun x51 () Bool)
(declare-fun x52 () (_ BitVec 159))
(declare-fun x53 () Bool)
(declare-fun x54 () Bool)
(declare-fun x55 () (_ BitVec 159))
(declare-fun x56 () Bool)
(declare-fun x57 () Bool)
(declare-fun x58 () (_ BitVec 159))
(declare-fun x59 () Bool)
(assert (and (ite x27 false (= x19 (concat ((_ extract 157 0) x10) (bvxor ((_ extract 158 158) x10) (_ bv0 1))))) (ite x24 (= x25 (_ bv0 159)) (= x25 (concat ((_ extract 157 0) x19) (bvxor ((_ extract 158 158) x19) ((_ extract 127 127) x19))))) (ite x37 (= x28 (_ bv0 159)) (= x28 (concat ((_ extract 157 0) x25) (bvxor ((_ extract 158 158) x25) (_ bv0 1))))) (ite x54 true (= (_ bv0 159) (concat ((_ extract 157 0) x28) (bvxor ((_ extract 158 158) x28) (_ bv0 1))))) x14 true true true x53 x47 true x29 true true true true true true true true true true true true true true x17 x59 x13 true true true true x44 (= x52 (_ bv0 159)) true x46 true true x33 true (ite x23 true x1) true true x40 true true (ite x21 false (= x42 (_ bv0 159))) true true true true true x22 true true true true x43 true true true true true true true true true true true true true true true true true true x26 true true true true true true true true true true true (ite x23 (= x34 (_ bv0 159)) (= x34 (concat (_ bv0 158) x49))) (ite x30 (= x15 (_ bv0 159)) (= x15 (concat ((_ extract 157 0) x34) (_ bv0 1)))) (ite x20 (= x55 (_ bv0 159)) (= x55 (concat ((_ extract 157 0) x15) (_ bv0 1)))) (ite x16 (= x18 (_ bv0 159)) (= x18 (concat ((_ extract 157 0) x55) (_ bv0 1)))) (ite x11 (= x41 (_ bv0 159)) (= x41 (concat ((_ extract 157 0) x18) (_ bv0 1)))) (ite x38 (= x9 (_ bv0 159)) (= x9 (concat ((_ extract 157 0) x41) (_ bv0 1)))) (ite x21 (= x36 (_ bv0 159)) (= x36 (concat ((_ extract 157 0) x9) (_ bv0 1)))) (not (= x10 x4)) (not (= x10 (_ bv0 159))) x6 (= (= x42 x36) (and true (not x24) (not x37) (not x54) true true x57 true true true true true true x5 x39 x2 true x3 x48 x31 x7 true true true true true true true true true true true true true true true true true true true true (not x23) (not x30) (not x20) x51 x35 x50 true))))
(check-sat)
(exit)
